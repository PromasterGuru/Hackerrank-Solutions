import sys
def formingMagicSquare(s):
    magicSquares = [
        [[2,9,4],[7,5,3],[6,1,8]],
        [[6,7,2],[1,5,9],[8,3,4]],
        [[8,1,6],[3,5,7],[4,9,2]],
        [[4,3,8],[9,5,1],[2,7,6]],
        [[6,1,8],[7,5,3],[2,9,4]],
        [[8,3,4],[1,5,9],[6,7,2]],
        [[4,9,2],[3,5,7],[8,1,6]],
        [[2,7,6],[9,5,1],[4,3,8]],
    ]
    minCost = sys.maxsize
    
    for square in magicSquares:
        cost = 0
        for i in range(len(s)):
            for j in range(len(s)):
                cost += abs(square[i][j] - s[i][j])
        minCost = min(minCost, cost)
    return minCost  

    
if __name__ == "__main__":
    s = [
        [5, 3, 4],
        [1, 5, 8],
        [6, 4, 2]
    ]

    s = [
        [4, 9, 2],
        [3, 5, 7],
        [8, 1, 5]
    ]

    s = [
        [4, 8, 2],
        [4, 5, 7],
        [6, 1, 6]
    ]
    print(formingMagicSquare(s))

    """
    [2 9 4]
    [7 5 3]
    [6 1 8]

    [6 7 2]
    [1 5 9]
    [8 3 4]

    [4 9 2]
    [3 5 7]
    [8 1 6]

    [8 1 6]
    [3 5 7]
    [4 9 2]

    [6 1 8]
    [7 5 3]
    [2 9 4]

    (0,0) -> (0,1)(0,2)(2,2)
    (1,1) -> (1,2)
    (0,2) -> (0,0)(2,2)(0,1)
    (1,2) -> (1,0)
    (2,2) -> (0,0)(0,2)(1,2)
    """
